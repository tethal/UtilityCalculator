import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort
import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.github.spotbugs' version '6.1.13'
}

ext {
    spotbugsVersion = '4.9.3'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'com.github.spotbugs'

    configurations {
        compileOnly
        spotbugsPlugins
    }

    dependencies {
        compileOnly "com.github.spotbugs:spotbugs-annotations:$spotbugsVersion"
        spotbugs "com.github.spotbugs:spotbugs:$spotbugsVersion"
        spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.0'
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    spotbugs {
        toolVersion = spotbugsVersion
        ignoreFailures = false
        showStackTraces = true
        showProgress = true
        effort = Effort.DEFAULT
        reportLevel = Confidence.valueOf('DEFAULT')
        reportsDir = layout.buildDirectory.dir("spotbugs").get().asFile
        maxHeapSize = '1g'
    }

    def mainHtmlReport = layout.buildDirectory.file("reports/spotbugs/main/spotbugs.html")
    def testHtmlReport = layout.buildDirectory.file("reports/spotbugs/test/spotbugs.html")

    tasks.withType(SpotBugsTask).configureEach {
        reports {
            html.required.set(true)
            html.stylesheet = 'fancy-hist.xsl'
        }

        if (name == "spotbugsMain") {
            reports.html.outputLocation.set(mainHtmlReport)
        } else if (name == "spotbugsTest") {
            reports.html.outputLocation.set(testHtmlReport)
        }
    }

    spotless {
        java {
            googleJavaFormat('1.17.0').aosp()
            target 'src/**/*.java'
        }
    }

    tasks.named('check') {
        dependsOn tasks.named('spotbugsMain')
        dependsOn tasks.named('spotbugsTest')
        dependsOn tasks.named('spotlessCheck')
    }

    tasks.named('build') {
        dependsOn 'spotlessApply'
    }
}
